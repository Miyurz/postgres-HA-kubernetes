# PetSet was renamed to StatefulSet in k8s 1.5
# apiVersion: apps/v1alpha1
# kind: PetSet
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: stolon-keeper
  namespace: sqlanalytics
spec:
  serviceName: "stolon-keeper"
  replicas: 2
  selector:
    matchLabels:
      component: stolon-keeper
      stolon-cluster: kube-stolon
  template:
    metadata:
      labels:
        component: stolon-keeper
        stolon-cluster: kube-stolon
      annotations:
        pod.alpha.kubernetes.io/initialized: "true"
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
    spec:
      terminationGracePeriodSeconds: 10
      containers:
        - name: stolon-keeper
          #image: sorintlab/stolon:master-pg10
          image: mayurnagekar/postgres-stolon:superset-db-test-12
          #securityContext:
            #runAsUser: 999
            #allowPrivilegeEscalation: false
          #args:
            #- -c
            #- 'config_file=/etc/postgresql/postgresql.conf'
           # Generate our keeper uid using the pod index
          command:
            - "/bin/bash"
            - "-ec"
            - |
              echo "Start stolon specific configuration ..."
              IFS='-' read -ra ADDR <<< "$(hostname)"
              export STKEEPER_UID="keeper${ADDR[-1]}"
              export POD_IP=$(hostname -i)
              export STKEEPER_PG_LISTEN_ADDRESS=$POD_IP
              export STOLON_DATA=/mnt/postgresql
              chown stolon:stolon $STOLON_DATA

              exec gosu stolon stolon-keeper --data-dir $STOLON_DATA

            #echo "About to run init-user-db.sh ..."
              #cat /etc/postgresql/postgresql.conf
              #ls -al /mnt/postgresql
              #ls -al /stolon-data
              #sudo -u postgres postgres -c config_file=/etc/postgresql/postgresql.conf
              #exec gosu stolon stolon-keeper --data-dir $STOLON_DATA
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: STKEEPER_CLUSTER_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['stolon-cluster']
            - name: STKEEPER_STORE_BACKEND
              value: "kubernetes"
            - name: STKEEPER_KUBE_RESOURCE_KIND
              value: "configmap"
            - name: STKEEPER_PG_REPL_USERNAME
              value: "repluser"
              # Or use a password file like in the below supersuser password
            - name: STKEEPER_PG_REPL_PASSWORD
              value: "replpassword"
            - name: STKEEPER_PG_SU_USERNAME
              value: "stolon"
            - name: STKEEPER_PG_SU_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: superset-db-secrets
                  key: password
              #value: "cGFzc3dvcmQx"
            - name: STKEEPER_METRICS_LISTEN_ADDRESS
              value: "0.0.0.0:8080"

              #- name: POSTGRES_PASSWORD
              #valueFrom:
              #secretKeyRef:
              #    name: superset-db-secrets
              #    key: POSTGRES_PASSWORD
            - name: PGSQL_USER
              valueFrom:
                secretKeyRef:
                  name: superset-db-secrets
                  key: PGSQL_USER
            - name: PGSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: superset-db-secrets
                  key: PGSQL_PASSWORD
            - name: PGSQL_DATABASE
              valueFrom:
                secretKeyRef:
                  name: superset-db-secrets
                  key: PGSQL_DATABASE
            - name: PGDATA
              value: "/mnt/postgresql/data"

              # Uncomment this to enable debug logs
            #- name: STKEEPER_DEBUG
            #  value: "true"
          ports:
            - containerPort: 5432
            - containerPort: 8080
          volumeMounts:
            - name: data
              mountPath: /mnt/postgresql
            - name: superset-db-config
              mountPath: /etc/postgresql/postgresql.conf
              subPath: postgresql.conf
           #- mountPath: /etc/secrets/stolon
             #name: stolon
      volumes:
      - name: superset-db-config
        configMap:
          name: superset-db-config
          items:
          - key: postgresql.conf
            path: postgresql.conf
            #- name: superset-db-secrets
            #secret:
            #secretName: superset-db-secrets
  # Define your own volumeClaimTemplate. This example uses dynamic PV provisioning with a storage class named "standard" (so it will works by default with minikube)
  # In production you should use your own defined storage-class and configure your persistent volumes (statically or dynamically using a provisioner, see related k8s doc).
  volumeClaimTemplates:
    - metadata:
        name: data
        #annotations:
        #volume.alpha.kubernetes.io/storage-class: standard
      spec:
        storageClassName: "rook-ceph-block"
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 512Mi
